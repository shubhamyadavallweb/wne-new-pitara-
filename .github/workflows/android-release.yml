name: Android Release APK

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-android:
    name: Build Android Release APK
    runs-on: ubuntu-latest
    env:
      CM_KEYSTORE: |
        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
      CM_KEYSTORE_FILENAME: "@pmp16__pitara-mobile.jks"
      CM_KEYSTORE_PASSWORD: "7d351b0f395bb01c1fd3ac4a96c6c126"
      CM_KEY_PASSWORD: "1f66c8c19ab910f5ec3c55aeb7028c18"
      CM_KEY_ALIAS: "3cac6c96b4ce9ceefd167ec8de475c63"
      # सुपाबेस और अन्य एन्वायरनमेंट वेरिएबल्स
      EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.EXPO_PUBLIC_SUPABASE_URL }}
      EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.EXPO_PUBLIC_SUPABASE_ANON_KEY }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
      # रेज़रपे और गूगल ऑथ कॉन्फिगरेशन
      EXPO_PUBLIC_RAZORPAY_KEY: ${{ secrets.EXPO_PUBLIC_RAZORPAY_KEY }}
      EXPO_PUBLIC_RAZORPAY_KEY_SECRET: ${{ secrets.EXPO_PUBLIC_RAZORPAY_KEY_SECRET }}
      EXPO_PUBLIC_RAZORPAY_WEBHOOK_SECRET: ${{ secrets.EXPO_PUBLIC_RAZORPAY_WEBHOOK_SECRET }}
      EXPO_PUBLIC_GOOGLE_WEB_CLIENT_ID: ${{ secrets.EXPO_PUBLIC_GOOGLE_WEB_CLIENT_ID }}
      EXPO_PUBLIC_GOOGLE_ANDROID_CLIENT_ID: ${{ secrets.EXPO_PUBLIC_GOOGLE_ANDROID_CLIENT_ID }}
      EXPO_PUBLIC_GOOGLE_IOS_CLIENT_ID: ${{ secrets.EXPO_PUBLIC_GOOGLE_IOS_CLIENT_ID }}
      EXPO_PUBLIC_GOOGLE_WEB_CLIENT_SECRET: ${{ secrets.EXPO_PUBLIC_GOOGLE_WEB_CLIENT_SECRET }}
      EXPO_PUBLIC_BYPASS_AUTH: ${{ secrets.EXPO_PUBLIC_BYPASS_AUTH }}
      # निम्बस एसएमएस कॉन्फिगरेशन
      NIMBUS_USER: ${{ secrets.NIMBUS_USER }}
      NIMBUS_AUTHKEY: ${{ secrets.NIMBUS_AUTHKEY }}
      NIMBUS_SENDER: ${{ secrets.NIMBUS_SENDER }}
      NIMBUS_ENTITYID: ${{ secrets.NIMBUS_ENTITYID }}
      NIMBUS_TEMPLATEID: ${{ secrets.NIMBUS_TEMPLATEID }}

    defaults:
      run:
        shell: bash
        working-directory: apps/mobile

    steps:
      # 1) Checkout repository source
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2) Set up Node.js (Expo SDK 50 supports Node 18)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      # 3) Set up Java (required by Android Gradle Plugin ≥ 8)
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: 17

      # 4) Install Android SDK & accept licenses
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: "platform-tools platforms;android-34 build-tools;34.0.0"

      # 5) Cache Gradle files for faster subsequent builds
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            apps/mobile/android/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 6) Cache npm dependencies to speed-up subsequent builds
      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 7) Install project dependencies (monorepo structure)
      - name: Install root dependencies
        working-directory: .
        run: |
          npm ci --legacy-peer-deps --no-audit --no-fund

      - name: Install mobile app dependencies
        run: |
          npm ci --legacy-peer-deps --no-audit --no-fund

      # 8) Install Expo CLI globally (specific version keeps reproducibility)
      - name: Install Expo CLI
        run: npm install -g @expo/cli@^0.16.1

      # 9) Create .env file with environment variables
      - name: Set up environment variables
        run: |
          cat > .env << EOF
          EXPO_PUBLIC_SUPABASE_URL=${{ secrets.EXPO_PUBLIC_SUPABASE_URL || 'https://jdfnkvbfpvzddjtgiovj.supabase.co' }}
          EXPO_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.EXPO_PUBLIC_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpkZm5rdmJmcHZ6ZGRqdGdpb3ZqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDk3ODE5OTcsImV4cCI6MjA2NTM1Nzk5N30.zHUA-ESeIWzsfEpkt6O7-nWOBLaBf8MCEQlUb2JcnOI' }}
          EXPO_PUBLIC_GOOGLE_ANDROID_CLIENT_ID=${{ secrets.EXPO_PUBLIC_GOOGLE_ANDROID_CLIENT_ID || '1089697091920-0b2qntimau4d59chhqouu6i8j4u1e6oi.apps.googleusercontent.com' }}
          NODE_ENV=production
          EOF

      # 10) Generate native Android project from Expo (cleans previous build)
      - name: Expo prebuild (Android)
        run: npx expo prebuild --platform android --clean --non-interactive --no-install

      # 11) Decode Android keystore & configure signing (if secrets are present)
      - name: Configure keystore for signing
        if: env.CM_KEYSTORE != ''
        run: |
          mkdir -p android/app
          echo "$CM_KEYSTORE" | base64 --decode > android/app/$CM_KEYSTORE_FILENAME
          cat >> android/gradle.properties <<EOF
          MYAPP_UPLOAD_STORE_FILE=app/$CM_KEYSTORE_FILENAME
          MYAPP_UPLOAD_STORE_PASSWORD=$CM_KEYSTORE_PASSWORD
          MYAPP_UPLOAD_KEY_ALIAS=$CM_KEY_ALIAS
          MYAPP_UPLOAD_KEY_PASSWORD=$CM_KEY_PASSWORD
          org.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=1g
          EOF

      # 12) Grant execute permission to Gradle wrapper & build release APK
      - name: Assemble release APK
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew clean
          ./gradlew assembleRelease --no-daemon --stacktrace --warning-mode all

      # 13) Upload the generated APK as GitHub Actions artifact
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: pitara-release-apk
          path: apps/mobile/android/app/build/outputs/apk/release/app-release.apk 